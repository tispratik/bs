:javascript
  $(document).ready(function() {
    $('.timesheet_expand_logs').live("click", function() {
      var timelogs = $(this).closest('.timesheet').find('.timelogs');
      timelogs.toggle();
      $(this).html(timelogs.css('display') == "none" ? "(+)" : "(-)");
      
      return false;
    })
    
    $('#new_timelog').live('submit', function() {
      if ($(this).valid()) {
        var self = this;
        $(this).addClass('loading');
        $.post($(this).attr('action'), $(this).serialize(), function() {
          $(self).removeClass('loading');
        }, 'script')
      }
      return false
    })
    
    $('#timesheets .timesheet a.delete').live('click', function() {
      $.post($(this).attr('href'), {_method: "delete"}, function() {
        $('#timesheets_filter_form').submit()
      }, 'script')
      return false
    })
    
    $('#timesheets_filter_form').submit(function() {
      var self = this;
      $(this).addClass('loading');
      $.get($(this).attr('action'), $(this).serialize(), function() {
        $(self).removeClass('loading');
      }, 'script')
      return false
    })
    
    $('#timesheets_filter_form input[name="user_ids[]"]').change(function() {
      var form = $(this).closest('form');
      var count_checked = form.find('[name="user_ids[]"]:checked').size();
      if (count_checked > 0) {
        form.find('[name="user_ids[]"]:not(:checked)').attr("disabled", "disabled");
      } else {
        form.find('[name="user_ids[]"]').removeAttr("disabled");
      }
    })
    
    $('#timelog_timesheet_description').autocomplete('#{url_for([:suggest, @project, :timesheets])}')
    $('#timesheets_filter_form input[name="users[]"]').change();
    $('#new_timelog').labelsWithinFields();
    
    #{"$('#new_timelog').hide();" unless @timesheet_user == current_user}
  })

- content_for :sidebar do
  %h1 Filter timesheets
  = render :partial => "shared/learnmore"
  - form_tag [@project, :timesheets], :method => :get, :class => :formtastic, :id => :timesheets_filter_form do
    %fieldset.inputs
      %ol
        %li
          = label_tag :date_from, "From"
          = text_field_tag :date_from, nil, :class => :datepicker
        %li
          = label_tag :date_to, "To"
          = text_field_tag :date_to, nil, :class => :datepicker
        %li.check_boxes
          %fieldset
            %ol
              - @project.roles.each do |role|
                %li
                  %label
                    = radio_button_tag :user_id, role.user_id, role.user_id == (@timesheet_user.id)
                    = role.user
    %fieldset.buttons
      %ol
        %li.commit
          = submit_tag "Apply Filter"
  = render :partial => "exportcsv"  

= render :partial => "timelogs/form", :locals => {:timelog => Timelog.new}

#timesheets
  = render :partial => "timesheets"