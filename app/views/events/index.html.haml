:javascript
  $(document).ready(function() {
    $('.filter_calendars_form').submit(function() {
      $('#calendar').addClass('loading');
      $.get(this.action, $(this).serialize(), function() {
        $('#calendar').removeClass('loading');
      }, 'script');
      return false;
    });
    
    $('.colorbox').live('click', function() {
      $.fn.colorbox({href: $(this).attr('href'), width: "60%", height: "40%"});
      return false;
    })
    
    $('#calendar_ids_all, #invitee_ids_all, #project_ids_all').each(function() {
      var self = this;
      $(this).change(function() {
        $(this).closest('fieldset').find(':checkbox').attr('checked', this.checked);
      })
      $(this).closest('fieldset').find(':checkbox:not(:first)').change(function() {
        if (!this.checked) {
          self.checked = false;
        }
      })
    })
    
    $('.filter_calendars_form :checkbox').change(function() {
      $(this.form).submit()
    })
    
    $('#invitee_ids_all, :checkbox[name="event[invitee_ids][]"]').change(function() {
      var invitee_ids = [];
      $(':checkbox[name="event[invitee_ids][]"]').each(function() {
        if (this.checked) {
          invitee_ids.push(this.value)
        }
      })
      $('#calendar').addClass('loading');
      $.get("#{url_for([@calendarable, :events])}", {user_ids: invitee_ids}, function() {
        $('#calendar').removeClass('loading');
      }, 'script')
    })
    
    $('.ec-month-nav a').live('click', function() {
      $.getScript($(this).attr('href'));
      return false
    })
    
    $('#new_event').labelsWithinFields()
  })

- content_for :sidebar do
  %h1 Add an event

  - if logged_in?
  
    - if (@calendarable.is_a?(Project) && @calendarable.roles.first(:conditions => {:user_id => current_user.id})) || (@calendarable.is_a?(User) && @calendarable == current_user)
      = render :partial => "events/add_form", :locals => {:event => @calendarable.calendar.events.build(:start_at => Time.current)}
    - if @calendarable.is_a?(User)
      - form_tag [@calendarable, :events], :method =>:get, :class => "filter_calendars_form" do
        %h2 Filter by projects
        %fieldset
          %p
            %label
              = check_box_tag :project_ids_all, 1, true
              All
          - @calendarable.roles.each do |role|
            %p
              %label
                = check_box_tag "project_ids[]", role.project_id, true
                = role.project
          = hidden_field_tag "project_ids[]"
      %br
      %p
        = submit_tag "Apply Filter"
    %br
    %h1 
      Import / Export
    %small_text.right
      = link_to "Import new calendar", [@calendarable, :calendars], :class => :colorbox
      %br
      = link_to "Download calendar", polymorphic_path([@calendarable, :events], :format => :ics, :hash => @calendarable.calendar.private_url_hash)
      %br
      = link_to "Export calendar URL", "#", :onclick => "$('.export_calendar_url').toggle(); return false"
    .clear
    .export_calendar_url.hide
      = polymorphic_url([@calendarable, :events], :format => :ics, :hash => @calendarable.calendar.private_url_hash)
    %br
    - if @calendarable.calendars.count > 1
      - form_tag [@calendarable, :events], :method =>:get, :class => "filter_calendars_form" do
        %fieldset
          %p
            %label
              = check_box_tag :calendar_ids_all, 1, true
              All
          - @calendarable.calendars.each do |calendar|
            - next if calendar.name == 'default'
            %p
              %label
                = check_box_tag "calendar_ids[]", calendar.id, (!params[:calendar_ids] || params[:calendar_ids].include?(calendar.id.to_s))
                = calendar.name
              = link_to image_tag('delete.png'), [@calendarable, calendar], :method => :delete
          = hidden_field_tag "calendar_ids[]"
        %br
        %p
          = submit_tag "Apply Filter"
    

.clear
#calendar
  = event_calendar