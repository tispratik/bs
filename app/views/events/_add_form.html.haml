= render :partial => "form_javascript"

:javascript
  $(document).ready(function() {
    
    $('#event_all_day').change(function() {
      $('#event_start_at_input').toggle(!this.checked);
      $('#event_duration_input').toggle(!this.checked);
    })
    
    $('#event_all_day').change();
  })

- semantic_form_for [@calendarable, event], :live_validations => true, :html => {:class => "stack"} do |f|
  = error_messages_for :event
  - f.inputs do
    = f.input :summary, :label => "Subject"
    = f.input :start_at_date, :as => :string, :label => "What date?", :input_html => {:value => event.start_at.to_date, :class => "datepicker"}
    = f.input :start_at, :as => :time, :label => "What time?", :input_html => {:value => event.start_at.to_s(:time)}, :include_blank => false
    = f.input :all_day, :label => "All day?"
    = f.input :duration, :label => "How long?"
    = f.input :location, :label => "Where?"
    = f.input :repeat_frequency, :as => :select, :collection => EventSeries::RECURRING_TYPES, :label => "Repeat every", :include_blank => "No repeat"
    = f.input :on_wdays, :as => :check_boxes, :collection => EventSeries::WDAYS, :checked => event.on_wdays, :label => "Wdays"
  - f.inputs nil, :class => :repeat_until do
    = f.input :repeat_until, :as => :select, :collection => EventSeries::UNTIL_TYPES, :include_blank => false
    = f.input :repeat_until_date, :as => :date, :label => "Until Date"
    = f.input :repeat_until_count, :label => "Until Count"

    - project_members_except_me = @calendarable.roles.user_id_does_not_equal(current_user.id)
    - unless project_members_except_me.empty?
      - if @calendarable.is_a?(Project)
        .gray
          Invite Project Members
        %li
          %fieldset
            %label
              = check_box_tag :invitee_ids_all
              All
            - @calendarable.roles.user_id_does_not_equal(current_user.id).each do |role|
              %label
                = check_box_tag "event[invitee_ids][]", role.user_id
                = image_tag role.user.ucontact.country.get_flag
                (#{Time.current.in_time_zone(role.user.ucontact.time_zone).to_s(:time)})
                = role.user
    .gray
      Invite people outside project
    = f.input :invitees, :label => "Email ids (comma separated)"
  = f.buttons
