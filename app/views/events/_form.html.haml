:javascript
  $(document).ready(function() {
    
    $('#event_all_day').change(function() {
      $('#event_start_at_4i').toggle(!this.checked);
      $('#event_start_at_5i').toggle(!this.checked);
      $('#event_end_at_input').toggle(!this.checked);
    })
    
    $('#event_repeat_frequency').change(function() {
      $('fieldset.repeat_until').toggle(this.value != '');
      $('#event_on_wdays_input').toggle(this.value == 'Week')
    })
    
    $('#event_repeat_until').change(function() {
      $('#event_repeat_until_date_input').hide();
      $('#event_repeat_until_date_input select').attr('disabled', 'disabled');
      $('#event_repeat_until_count_input').hide();
      $('#event_repeat_until_count').attr('disabled', 'disabled');
      if (this.value == "date") {
        $('#event_repeat_until_date_input').show();
        $('#event_repeat_until_date_input select').removeAttr('disabled');
      }
      if (this.value == "count") {
        $('#event_repeat_until_count_input').show();
        $('#event_repeat_until_count_input').removeAttr('disabled');
      }
    })
    
    $('#event_all_day').change();
    $('#event_repeat_frequency').change();
    $('#event_repeat_until').change();
  })

- semantic_form_for [@calendarable, event], :live_validations => true do |f|
  = error_messages_for :event
  - f.inputs do
    = f.input :summary, :label => "Subject"
    = f.input :all_day, :label => "All day?"
    = f.input :start_at, :label => "Start at"
    = f.input :end_at, :label => "End at"
    = f.input :invitees
    = f.input :repeat_frequency, :as => :select, :collection => EventSeries::RECURRING_TYPES, :label => "Repeat every", :include_blank => "No repeat"
    = f.input :on_wdays, :as => :check_boxes, :collection => EventSeries::WDAYS, :checked => event.on_wdays
  - f.inputs nil, :class => :repeat_until do
    = f.input :repeat_until, :as => :select, :collection => EventSeries::UNTIL_TYPES, :include_blank => false
    = f.input :repeat_until_date, :as => :date, :label => "Until Date"
    = f.input :repeat_until_count, :label => "Until Count"
  - f.buttons do
    - if event.new_record?
      = f.commit_button "Create event"
    - else
      = f.commit_button "Update current event"
      - if event.recurring?
        = f.commit_button "Update all events in the series"
